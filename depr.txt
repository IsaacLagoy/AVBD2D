    len_a = glm.length(pen_a) if pen_a else float('inf')
    len_b = glm.length(pen_b) if pen_b else float('inf')
    
    # get reference contact points
    if edge_a:
        econ_a = closest_point_on_segment(*edge_a, min_b)
    
    if edge_b:
        econ_b = closest_point_on_segment(*edge_b, min_a)
    
    # 2 point collision
    if pen_a and pen_b and abs(len_a - len_b) < 1e-6:
        normal = glm.normalize(pen_a)
        contacts[0].normal = contacts[1].normal = normal
        contacts[0].rA = inverse_transform(body_a.pos, body_a.scale, min_a)
        contacts[0].rB = inverse_transform(body_b.pos, body_b.scale, econ_b)
        
        contacts[1].rA = inverse_transform(body_a.pos, body_a.scale, econ_a)
        contacts[1].rB = inverse_transform(body_b.pos, body_b.scale, min_b)
        
        return 2
    
    # only a dominant collision
    if not pen_b or len_a > len_b:
        normal = glm.normalize(pen_a)
        contacts[0].normal = normal
        contacts[0].rA = inverse_transform(body_a.pos, body_a.scale, econ_a)
        contacts[0].rB = inverse_transform(body_b.pos, body_b.scale, min_b)
        
        return 1
        
    # only b dominant collision
    normal = glm.normalize(pen_b)
    contacts[0].normal = normal
    contacts[0].rA = inverse_transform(body_a.pos, body_a.scale, min_a)
    contacts[0].rB = inverse_transform(body_b.pos, body_b.scale, econ_b)